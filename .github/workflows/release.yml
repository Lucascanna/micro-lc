name: micro-lc main CI

env:
  context: './'
  cache-name: cache-release
  NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  node-version: 16.x

on:
  push:
    branches:
      - dev

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      ## Node
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      ## Yarn Install State
      - name: Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
            **/.pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ${{ env.context }}packages/**/dist
            ${{ env.context }}packages/**/node-modules
          key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-build-${{ github.sha }}

      - run: yarn install --immutable
      - run: yarn postinstall
      - run: yarn prebuild

  checks:
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      ## Yarn Install State
      - name: Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ env.context }}.yarn/cache
            ${{ env.context }}.yarn/unplugged
            ${{ env.context }}.yarn/install-state.gz
            ${{ env.context }}.pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ${{ env.context }}packages/**/dist
            ${{ env.context }}packages/**/node-modules
          key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-build-${{ github.sha }}

      - run: yarn lint
      - run: yarn check:types

  build:
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
          cache: yarn

      ## Yarn Install State
      - name: Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ env.context }}.yarn/cache
            ${{ env.context }}.yarn/unplugged
            ${{ env.context }}.yarn/install-state.gz
            ${{ env.context }}.pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ${{ env.context }}packages/**/dist
            ${{ env.context }}packages/**/node-modules
          key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-build-${{ github.sha }}

      - run: yarn build

  tests:
    needs:
      - install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - iconic
          - interfaces
          - layout
          - orchestrator

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
          cache: yarn

      ## Yarn Install State
      - name: Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ env.context }}.yarn/cache
            ${{ env.context }}.yarn/unplugged
            ${{ env.context }}.yarn/install-state.gz
            ${{ env.context }}.pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ${{ env.context }}packages/**/dist
            ${{ env.context }}packages/**/node-modules
          key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-build-${{ github.sha }}

      - uses: microsoft/playwright-github-action@v1

      - run: yarn workspace @micro-lc/${{ matrix.package }} run test

  release:
    needs:
      - install
      - checks
      - tests
      - build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - iconic
          - interfaces
          - layout
          - orchestrator

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
          cache: yarn

      ## Yarn Install State
      - name: Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ env.context }}.yarn/cache
            ${{ env.context }}.yarn/unplugged
            ${{ env.context }}.yarn/install-state.gz
            ${{ env.context }}.pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ${{ env.context }}packages/**/dist
            ${{ env.context }}packages/**/node-modules
          key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-build-${{ github.sha }}

      - run: cd packages/${{ matrix.package }}
      - run: yarn install --immutable
      # - run: yarn npm publish