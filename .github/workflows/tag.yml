name: Tag CI

env:
  context: './'
  cache-name: cache-release
  node-version: 16.x
  NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  push:
    tags:
      - '**'

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Extract tag name
        id: extract_tag
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"

      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: yarn

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ./packages/**/dist
          key: ${{ runner.os }}-${{ steps.extract_tag.outputs.tag }}-build

      - name: Install
        run: yarn install --immutable

      - name: Build
        run: yarn initialize

  release-docker:
    needs:
      - prepare

    name: Build web-server docker container
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - uses: actions/checkout@v3

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ./packages/orchestrator/dist
          key: ${{ runner.os }}-${{ steps.extract_tag.outputs.tag }}-build

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=microlc/micro-lc
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=$(echo ${VERSION} | sed s/^v//)
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo "##[set-output name=tags;]${TAGS}"
          echo "##[set-output name=image;]${DOCKER_IMAGE}"

      - name: Move to Orchestrator package
        run: cd packages/orchestrator

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.BOT_DOCKER_USERNAME }}
          password: ${{ secrets.BOT_DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: 'docker/Dockerfile'
          build-args: COMMIT_SHA=${GITHUB_SHA},DESCRIPTION="The Mia-Platform micro frontend solution",VERSION=${VERSION}
          push: true
          tags: ${{ steps.prepare.outputs.tags }}

  release-package:
    needs:
      - prepare

    name: Release package on npm
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/@micro-lc/') }}

    steps:
      - uses: actions/checkout@v3

      - name: Build Cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            ./packages/**/dist
          key: ${{ runner.os }}-${{ steps.extract_tag.outputs.tag }}-build

      - name: Prepare
        id: prepare
        run: |
          PACKAGE=$(echo $TAGS | sed 's/^\(@micro-lc\/\)//' | sed 's/@.*$//')
          VERSION=$(echo $TAGS | sed 's/^\(@micro-lc\/\)//' | sed 's/.*@//')
          echo "##[set-output name=package;]${PACKAGE}"
          echo ${VERSION}

      - name: Publish
        working-directory: ./packages/${{ steps.prepare.outputs.package }}
        run: yarn npm publish
